<template>
<div class="custom-tree-container">
  <div class="block">
    <p>欢迎访问</p>
    <el-tree
      :data="data5"
      show-checkbox
      node-key="id"
      default-expand-all
      :expand-on-click-node="false">
      <span class="custom-tree-node" slot-scope="{ node, data }">
        <span>{{ node.label }}</span>
      </span>
    </el-tree>
    <ul class="text-center spacing" style="padding: 0">
      <li v-for="(item,index) in links"><a @click="showAliyuns2(item.text)">{{item.text}}</a></li>
    </ul>
   <ve-line :data="chartData"></ve-line>
  </div>
</div>
</template>
<script>
  let id = 1000;

  export default {
    data() {
      const data = [
      {
        id: 1,
        label: '内存型',
        route: '/page01/page01-b',
        children: [     {
          id: 10,
          label: '内存型',
 
          children: [{
            id: 15,
            label: '三级 1-1-1'
          }, {
            id: 16,
            label: '三级 1-1-2'
          }         ]   },     
          {
		  id: 11,
		  label: '内存增强型',
	  },   {
		  id: 12,
		  label: '内存网络增强型'
		}]
      }, {
        id: 2,
        label: '计算型',
        route: '/page01/page01-b',
        children: [{
          id: 13,
          label: '计算型'
        }, {
          id: 14,
          label: '密集计算型'
        }]
      }
      ];
      return {
        links: data, 
        chartData: {
          columns: ['shijian', 'biaozhunmuluyuejia', 'youhuiyuejia', 'nianfuyuejia', 'sannianfuyuejia', 'wunianfuyuejia'],
          rows: []    },
        data5: JSON.parse(JSON.stringify(data))
      }
    },

    /* mounted: function() {
      this.showAliyuns2()
      this.showAliyuns()
     }, */

    methods: {
    showAliyuns2(paramter){
   this.$http.get('http://10.1.100.189:8000/api/show_aliyuns')
   .then((response) => {
   var res = JSON.parse(response.bodyText)
   console.log(res)
   if (res.error_num == 0) {
   var v = res['list']
   var p=paramter
   this.chartData.rows = []
   console.log("ccc1100")
   console.log(p)
   console.log("ccc0011")

   for(var i=0; i < v.length; i++)           {
    if (v[i].fields.shiliguige == p)          {
    var s1 = { shijian: v[i].fields.shijian,biaozhunmuluyuejia:v[i].fields.biaozhunmuluyuejia, youhuiyuejia:v[i].fields.youhuiyuejia, nianfuyuejia:v[i].fields.nianfuyuejia, sannianfuyuejia:v[i].fields.sannianfuyuejia, wunianfuyuejia: v[i].fields.wunianfuyuejia}
      this.chartData.rows.push(s1)
         }
          }

      console.log('ddddd')
       console.log(this.chartData.rows)
         console.log(this.chartData.rows[0])
         console.log(this.chartData.rows[1])
          console.log(this.chartData.rows[2])
          console.log('fffffff')            }
         else {              this.$message.error('查询书籍失败')
                 console.log(res['msg'])            }        })
        },



       showAliyuns(){
      this.$http.get('http://10.1.100.189:8000/api/show_aliyuns')
        .then((response) => {

            var res = JSON.parse(response.bodyText)
            console.log(res)

            if (res.error_num == 0) {

              var p="pppp"    //this.$route.query.pk_refinfo
              var v = res['list']
              //this.links = this.data   
           
           for(var i=0; i < v.length; i++)
           {


            if (v[i].fields.shiliguige.startsWith(p)) // || v[i].fields.shiliguige.startWith("内存增强型")>-1 || v[i].fields.shiliguige.startWith("内存网络增强型")>-1)
            {
              console.log(p + " aaa")


            for (var j=0; j < this.links.length; j++)
            {

                 console.log("links.....")
                 console.log(this.links[j].text)
                 //console.log(links[j].fields.text)
                 console.log("links2.......")

                 if (this.links[j].text == v[i].fields.shiliguige)
                 { 
                    break
                 }
            }



            if (j != this.links.length && this.links[j].text == v[i].fields.shiliguige)
            {
              continue
            }
            else
            {
                  //alert("contain2:")
                  var s1 = { text: v[i].fields.shiliguige, route: '/page01/page01-b/end'}

                  console.log('cmcmcmcmccmm')
                  console.log(s1)
                  console.log('mcmcmcmcmcmc')
                 // this.links.push(s1)
            }
             }

             }  

            console.log('ddddd')
             console.log(this.links)
             console.log(this.links[0])
             console.log(this.links[1])
             console.log(this.links[2])

             console.log('fffffff')

            }
            else {
              this.$message.error('查询书籍失败')
              console.log(res['msg'])
            }
        })
    
  },  

    
    setDate()
      {
    this.activeDate = (new Date()).toString()
      }
    }
  }
</script>

<style>
  .active{
      color: #138bec;
      background: #138bec;
    },
  .custom-tree-node {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: space-between;
    font-size: 14px;
    padding-right: 8px;
  }
</style> 
